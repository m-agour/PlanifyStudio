/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Canvas, useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three/src/loaders/TextureLoader'
import { MeshStandardMaterial } from "three";

export function Model(props) {
  const { nodes, materials } = useGLTF("/plan7.fy.gltf");


  // nodes.geometry_0.material.color.set(0x888888); // Set the color to red
  console.log(nodes.geometry_0.material);

  
  const [colorMap, displacementMap, normalMap, roughnessMap, aoMap] = useLoader(TextureLoader, [
    "512/Bricks17_col.jpg",
    '512/Bricks17_disp.jpg',
    '512/Bricks17_nrm.jpg',
    '512/Bricks17_rgh.jpg',
    '512/Bricks17_AO.jpg',
  ])

  // const material = new MeshStandardMaterial({
  //   // map: colorMap,
  //   // displacementMap: displacementMap,
  //   normalMap: normalMap,
  //   roughnessMap: roughnessMap,
  //   aoMap: aoMap,
  // })
  
  const material = nodes.geometry_0.material
  material.normalMap = normalMap;
  material.roughnessMap = roughnessMap;
  material.aoMap = aoMap;
  material.map = colorMap;
  // material.displacementMap = displacementMap;
  


  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.geometry_0.geometry}
        material={material}
        position={[-128, 0, -128]}
      />
    </group>
  );
}

useGLTF.preload("/out_1 - Copy.gltf");
